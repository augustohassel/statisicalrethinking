mu %>% as.tibble() %>% map_df(mean)
mu %>% as.tibble() %>% map(mean)
mu %>% as.tibble() %>% map(mean) %>% bind_cols()
mu %>% as.tibble() %>% map_df(mean)
mu %>% as.tibble() %>% map_df(mean) %>% t()
mu %>% as.tibble() %>% map_dfc()
mu %>% as.tibble() %>% map_dfc(mean)
mu %>% as.tibble() %>% map_dfr(mean)
mu %>% as.tibble() %>% map_df(mean)
mu %>% as.tibble() %>% map_df(mean) %>% t()
mu %>% as.tibble() %>% map_df(mean) %>% t() %>% as.tibble() %>% rename(blooms=V1)
m7.9
mu %>% as.tibble() %>% map_df(mean, PI)
mu %>% as.tibble() %>% invoke_map_df(c(mean, PI))
mu %>% as.tibble() %>% invoke_map(c(mean, PI))
mu %>% as.tibble()
mu %>% as.tibble() %>% invoke_map(c("mean", "PI"))
mu %>% as.tibble() %>% invoke_map(list(mean, PI))
mu %>% tail
mu %>% as.tibble()
for_invoke <- function(func) mu %>% as.tibble()
View(for_invoke)
for_invoke <- function(func) {
mu %>% as.tibble() %>% map_df(func)
}
for_invoke(mean)
for_invoke(PI)
for_invoke <- function(func) {
mu %>% as.tibble() %>% map_df(func) %>% t() %>% as.tibble()
}
for_invoke(PI)
for_invoke(mean)
invoke_map_df(for_invoke, list(mean, PI))
invoke_map_df(for_invoke, list(list(mean), list(PI)))
for_invoke(mean)
for_invoke() %>% invoke_map_dfc(list(mean))
for_invoke() %>% invoke_map_dfc(list(list(mean)))
invoke_map_dfc(for_invoke, list(list(mean)))
invoke_map_dfc(for_invoke, list(list(mean), list(PI)))
mu <- link(m7.9, data = data.frame(shade.c=-1:1, water.c=-1))
for_invoke <- function(func) {
mu %>% as.tibble() %>% map_df(func) %>% t() %>% as.tibble()
}
mu <- invoke_map_dfc(for_invoke, list(list(mean), list(PI)))
mu
mu <- mu %>% rename(blooms=V1, Lower=V11, Upper=V2) %>% add_column(shade.c=-1:1)
mu
mu <- link(m7.9, data = data.frame(shade.c=-1:1, water.c=-1))
for_invoke <- function(func) {
mu %>% as.tibble() %>% map_df(func) %>% t() %>% as.tibble()
}
mu <- invoke_map_dfc(for_invoke, list(list(mean), list(PI)))
mu <- mu %>% rename(blooms=V1, Lower=V11, Upper=V2) %>% add_column(shade.c=-1:1, water.c=-1)
mu
as.list(-1:1)
for_tryptych <- function(var) {
mu <- link(m7.9, data = data.frame(shade.c=-1:1, water.c=var))
for_invoke <- function(func) {
mu %>% as.tibble() %>% map_df(func) %>% t() %>% as.tibble()
}
mu <- invoke_map_dfc(for_invoke, list(list(mean), list(PI)))
mu <- mu %>% rename(blooms=V1, Lower=V11, Upper=V2) %>% add_column(shade.c=-1:1, water.c=var)
return(mu)
}
for_tryptych(-1)
for_tryptych(0)
for_tryptych(1)
purrr::map_dfr(as.list(-1:1), for_tryptych)
data_7.9 <- purrr::map_dfr(as.list(-1:1), for_tryptych)
ggplot(data = data_7.9,
aes(x = shade_c,
y = blooms)) +
geom_point() +
theme_classic() +
facet_grid(~water.c)
ggplot(data = data_7.9,
aes(x = shade.c,
y = blooms)) +
geom_point() +
theme_classic() +
facet_grid(~water.c)
ggplot(data = data_7.9,
aes(x = shade.c,
y = blooms)) +
geom_point() +
facet_grid(~water.c)
ggplot(data = data_7.9,
aes(x = shade.c,
y = blooms)) +
geom_point() +
theme_classic() +
facet_grid(~water.c)
ggplot(data = data_7.9,
aes(x = shade.c,
y = blooms)) +
geom_point() +
theme_classic() +
facet_grid(~water.c)
ggplot(data = data_7.9,
aes(x = shade.c,
y = blooms)) +
geom_point() +
theme_classic() +
facet_grid(.~water.c)
ggplot(data = data_7.9,
aes(x = shade.c,
y = blooms)) +
geom_point() +
theme_classic() +
facet_grid(water.c~)
ggplot(data = data_7.9,
aes(x = shade.c,
y = blooms)) +
geom_point() +
theme_classic() +
facet_grid(water.c~.)
ggplot(data = data_7.9,
aes(x = shade.c,
y = blooms)) +
geom_point() +
theme_classic() +
facet_grid(~water.c)
ggplot(data = data_7.9,
aes(x = shade.c,
y = blooms)) +
geom_point() +
theme_classic() +
geom_line()+
facet_grid(~water.c)
tulips
ggplot(data = tulips,
aes(x = shade.c,
y = blooms)) +
geom_point() +
theme_classic() +
geom_line()+
facet_grid(~water.c)
ggplot(data = tulips,
aes(x = shade.c,
y = blooms)) +
geom_point() +
theme_classic() +
facet_grid(~water.c)
ggplot(data = tulips,
aes(x = shade.c,
y = blooms)) +
geom_point() +
theme_classic() +
geom_line(data = data_7.9, aes(x = shade.c, y = blooms), inherit.aes = F) +
facet_grid(~water.c)
ggplot(data = tulips,
aes(x = shade.c,
y = blooms)) +
geom_point() +
theme_classic() +
geom_line(data = data_7.9, aes(x = shade.c, y = blooms), inherit.aes = F) +
geom_ribbon(data = data_7.9, aes(x = shade.c, ymin = Lower, ymax = Upper), fill = "grey80", alpha=1/3, inherit.aes = F)
ggplot(data = tulips,
aes(x = shade.c,
y = blooms)) +
geom_point() +
theme_classic() +
geom_line(data = data_7.9, aes(x = shade.c, y = blooms), inherit.aes = F) +
geom_ribbon(data = data_7.9, aes(x = shade.c, ymin = Lower, ymax = Upper), fill = "grey80", alpha=1/3, inherit.aes = F)
ggplot(data = tulips,
aes(x = shade.c,
y = blooms)) +
geom_point() +
theme_classic() +
geom_line(data = data_7.9, aes(x = shade.c, y = blooms), inherit.aes = F) +
# geom_ribbon(data = data_7.9, aes(x = shade.c, ymin = Lower, ymax = Upper), fill = "grey80", alpha=1/3, inherit.aes = F)
facet_grid(~water.c)
ggplot(data = tulips,
aes(x = shade.c,
y = blooms)) +
geom_point() +
theme_classic() +
geom_line(data = data_7.9, aes(x = shade.c, y = blooms), inherit.aes = F) +
geom_ribbon(data = data_7.9, aes(x = shade.c, y = blooms,  ymin = Lower, ymax = Upper), fill = "grey80", alpha=1/3, inherit.aes = F)
ggplot(data = tulips,
aes(x = shade.c,
y = blooms)) +
geom_point() +
theme_classic() +
geom_line(data = data_7.9, aes(x = shade.c, y = blooms), inherit.aes = F) +
# geom_ribbon(data = data_7.9, aes(x = shade.c,  ymin = Lower, ymax = Upper), fill = "grey80", alpha=1/3, inherit.aes = F)
facet_grid(~water.c)
ggplot(data = tulips,
aes(x = shade.c,
y = blooms)) +
geom_point() +
theme_classic() +
geom_line(data = data_7.9, aes(x = shade.c, y = blooms), inherit.aes = F) +
geom_ribbon(data = data_7.9, aes(x = shade.c,  ymin = Lower, ymax = Upper), fill = "grey80", alpha=1/3, inherit.aes = T)
ggplot(data = tulips,
aes(x = shade.c,
y = blooms)) +
geom_point() +
theme_classic() +
geom_line(data = data_7.9, aes(x = shade.c, y = blooms), inherit.aes = F) +
geom_ribbon(data = data_7.9, aes(x = shade.c,  ymin = Lower, ymax = Upper), fill = "grey80", alpha=1/3, inherit.aes = F)
ggplot(data = tulips,
aes(x = shade.c,
y = blooms)) +
geom_point() +
theme_classic() +
geom_line(data = data_7.9, aes(x = shade.c, y = blooms), inherit.aes = F) +
# geom_ribbon(data = data_7.9, aes(x = shade.c,  ymin = Lower, ymax = Upper), fill = "grey80", alpha=1/3, inherit.aes = F)
facet_grid(~water.c)
ggplot(data = tulips,
aes(x = shade.c,
y = blooms)) +
geom_point() +
theme_classic() +
# geom_line(data = data_7.9, aes(x = shade.c, y = blooms), inherit.aes = F) +
geom_ribbon(data = data_7.9, aes(x = shade.c,  ymin = Lower, ymax = Upper), fill = "grey80", alpha=1/3, inherit.aes = F)
ggplot(data = tulips,
aes(x = shade.c,
y = blooms)) +
geom_point() +
theme_classic() +
geom_line(data = data_7.9, aes(x = shade.c, y = blooms), inherit.aes = F) +
# geom_ribbon(data = data_7.9, aes(x = shade.c,  ymin = Lower, ymax = Upper), fill = "grey80", alpha=1/3, inherit.aes = F)
facet_grid(~water.c)
ggplot(data = tulips,
aes(x = shade.c,
y = blooms)) +
geom_point() +
theme_classic() +
geom_line(data = data_7.9, aes(x = shade.c, y = blooms), inherit.aes = F) +
geom_ribbon(data = data_7.9, aes(ymin = Lower, ymax = Upper), fill = "grey80", alpha=1/3, inherit.aes = F)
ggplot(data = tulips,
aes(x = shade.c,
y = blooms)) +
geom_point() +
theme_classic() +
geom_line(data = data_7.9, aes(x = shade.c, y = blooms), inherit.aes = F) +
geom_ribbon(data = data_7.9, aes(ymin = Lower, ymax = Upper), fill = "grey80", alpha=1/3, inherit.aes = T)
ggplot(data = tulips,
aes(x = shade.c,
y = blooms)) +
geom_point() +
theme_classic() +
geom_line(data = data_7.9, aes(x = shade.c, y = blooms), inherit.aes = T) +
geom_ribbon(data = data_7.9, aes(ymin = Lower, ymax = Upper), fill = "grey80", alpha=1/3, inherit.aes = T)
ggplot(data = tulips,
aes(x = shade.c,
y = blooms)) +
geom_point() +
theme_classic() +
geom_line(data = data_7.9, aes(x = shade.c, y = blooms), inherit.aes = F) +
facet_grid(~water.c) +
geom_ribbon(data = data_7.9, aes(ymin = Lower, ymax = Upper), fill = "grey80", alpha=1/3, inherit.aes = F)
ggplot(data = tulips,
aes(x = shade.c,
y = blooms)) +
geom_point() +
theme_classic() +
geom_line(data = data_7.9, aes(x = shade.c, y = blooms), inherit.aes = F) +
facet_grid(~water.c) +
geom_ribbon(data = data_7.9, aes(x = shace.c, ymin = Lower, ymax = Upper), fill = "grey80", alpha=1/3, inherit.aes = F)
ggplot(data = tulips,
aes(x = shade.c,
y = blooms)) +
geom_point() +
theme_classic() +
geom_line(data = data_7.9, aes(x = shade.c, y = blooms), inherit.aes = F) +
facet_grid(~water.c) +
geom_ribbon(data = data_7.9, aes(x = shade.c, ymin = Lower, ymax = Upper), fill = "grey80", alpha=1/3, inherit.aes = F)
ggplot(data = tulips,
aes(x = shade.c,
y = blooms)) +
geom_point() +
facet_grid(~water.c) +
theme_classic() +
geom_line(data = data_7.9, aes(x = shade.c, y = blooms), inherit.aes = F) +
facet_grid(~water.c) +
geom_ribbon(data = data_7.9, aes(x = shade.c, ymin = Lower, ymax = Upper), fill = "grey80", alpha=1/3, inherit.aes = F)
facet_grid(~water.c)
ggplot(data = tulips,
aes(x = shade.c,
y = blooms)) +
geom_point() +
geom_line(data = data_7.9, aes(x = shade.c, y = blooms), inherit.aes = F) +
facet_grid(~water.c) +
geom_ribbon(data = data_7.9, aes(x = shade.c, ymin = Lower, ymax = Upper), fill = "grey80", alpha=1/3, inherit.aes = F) +
facet_grid(~water.c)
ggplot(data = tulips,
aes(x = shade.c,
y = blooms)) +
geom_point() +
geom_line(data = data_7.9, aes(x = shade.c, y = blooms), inherit.aes = F) +
facet_grid(~water.c) +
geom_ribbon(data = data_7.9, aes(x = shade.c, ymin = Lower, ymax = Upper), fill = "grey80", alpha=1/3, inherit.aes = F) +
facet_grid(~water.c) +
theme_classic() +
ggplot(data = tulips,
aes(x = shade.c,
y = blooms)) +
geom_point() +
geom_line(data = data_7.9, aes(x = shade.c, y = blooms), inherit.aes = F) +
facet_grid(~water.c) +
geom_ribbon(data = data_7.9, aes(x = shade.c, ymin = Lower, ymax = Upper), fill = "grey80", alpha=1/3, inherit.aes = F) +
facet_grid(~water.c) +
theme_classic()
ggplot(data = tulips,
aes(x = shade.c,
y = blooms)) +
geom_point() +
geom_line(data = data_7.9, aes(x = shade.c, y = blooms), inherit.aes = F) +
facet_grid(~water.c) +
geom_ribbon(data = data_7.9, aes(x = shade.c, ymin = Lower, ymax = Upper), fill = "grey80", alpha=1/3, inherit.aes = F) +
facet_grid(~water.c) +
theme_classic()
ggplot(data = tulips,
aes(x = shade.c,
y = blooms)) +
geom_point() +
geom_line(data = data_7.9, aes(x = shade.c, y = blooms), inherit.aes = F) +
facet_grid(~water.c) +
geom_ribbon(data = data_7.9, aes(x = shade.c, ymin = Lower, ymax = Upper), fill = "grey80", alpha=1/3, inherit.aes = F) +
facet_grid(~water.c)
ggplot(data = tulips,
aes(x = shade.c,
y = blooms)) +
geom_point() +
geom_line(data = data_7.9, aes(x = shade.c, y = blooms), inherit.aes = F) +
facet_grid(~water.c) +
geom_ribbon(data = data_7.9, aes(x = shade.c, ymin = Lower, ymax = Upper), fill = "grey80", alpha=1/3, inherit.aes = F) +
facet_grid(~water.c) +
label_wrap_gen("teta", "culo")
ggplot(data = tulips,
aes(x = shade.c,
y = blooms)) +
geom_point() +
geom_line(data = data_7.9, aes(x = shade.c, y = blooms), inherit.aes = F) +
facet_grid(~water.c) +
geom_ribbon(data = data_7.9, aes(x = shade.c, ymin = Lower, ymax = Upper), fill = "grey80", alpha=1/3, inherit.aes = F) +
facet_grid(~water.c) +
labs(tittle="Predicted blooms across water traetments")
ggplot(data = tulips,
aes(x = shade.c,
y = blooms)) +
geom_point() +
geom_line(data = data_7.9, aes(x = shade.c, y = blooms), inherit.aes = F) +
facet_grid(~water.c) +
geom_ribbon(data = data_7.9, aes(x = shade.c, ymin = Lower, ymax = Upper), fill = "grey80", alpha=1/3, inherit.aes = F) +
facet_grid(~water.c) +
labs(subtittle="Predicted blooms across water traetments")
ggplot(data = tulips,
aes(x = shade.c,
y = blooms)) +
geom_point() +
geom_line(data = data_7.9, aes(x = shade.c, y = blooms), inherit.aes = F) +
facet_grid(~water.c) +
geom_ribbon(data = data_7.9, aes(x = shade.c, ymin = Lower, ymax = Upper), fill = "grey80", alpha=1/3, inherit.aes = F) +
facet_grid(~water.c) +
lab(x="Predicted blooms across water traetments")
ggplot(data = tulips,
aes(x = shade.c,
y = blooms)) +
geom_point() +
geom_line(data = data_7.9, aes(x = shade.c, y = blooms), inherit.aes = F) +
facet_grid(~water.c) +
geom_ribbon(data = data_7.9, aes(x = shade.c, ymin = Lower, ymax = Upper), fill = "grey80", alpha=1/3, inherit.aes = F) +
facet_grid(~water.c) +
labs(x="Predicted blooms across water traetments")
ggplot(data = tulips,
aes(x = shade.c,
y = blooms)) +
geom_point() +
geom_line(data = data_7.9, aes(x = shade.c, y = blooms), inherit.aes = F) +
facet_grid(~water.c) +
geom_ribbon(data = data_7.9, aes(x = shade.c, ymin = Lower, ymax = Upper), fill = "grey80", alpha=1/3, inherit.aes = F) +
facet_grid(~water.c) +
labs(tittle="Predicted blooms across water traetments")
ggplot(data = tulips,
aes(x = shade.c,
y = blooms)) +
geom_point() +
geom_line(data = data_7.9, aes(x = shade.c, y = blooms), inherit.aes = F) +
facet_grid(~water.c) +
geom_ribbon(data = data_7.9, aes(x = shade.c, ymin = Lower, ymax = Upper), fill = "grey80", alpha=1/3, inherit.aes = F) +
facet_grid(cols = vars(water.c)) +
opts(tittle="Predicted blooms across water traetments")
ggplot(data = tulips,
aes(x = shade.c,
y = blooms)) +
geom_point() +
geom_line(data = data_7.9, aes(x = shade.c, y = blooms), inherit.aes = F) +
facet_grid(~water.c) +
geom_ribbon(data = data_7.9, aes(x = shade.c, ymin = Lower, ymax = Upper), fill = "grey80", alpha=1/3, inherit.aes = F) +
facet_grid(cols = vars(water.c))
ggplot(data = tulips,
aes(x = shade.c,
y = blooms)) +
geom_point() +
geom_line(data = data_7.9, aes(x = shade.c, y = blooms), inherit.aes = F) +
facet_grid(~water.c) +
geom_ribbon(data = data_7.9, aes(x = shade.c, ymin = Lower, ymax = Upper), fill = "grey80", alpha=1/3, inherit.aes = F) +
facet_grid(cols = vars(water.c))+
ggtitle("test")
ggplot(data = tulips,
aes(x = shade.c,
y = blooms)) +
geom_point() +
geom_line(data = data_7.9, aes(x = shade.c, y = blooms), inherit.aes = F) +
facet_grid(~water.c) +
geom_ribbon(data = data_7.9, aes(x = shade.c, ymin = Lower, ymax = Upper), fill = "grey80", alpha=1/3, inherit.aes = F) +
facet_grid(cols = vars(water.c))+
ggtitle("Triptych", subtitle = "Predicted blooms across water tratments with interaction effect")
for_tryptych <- function(var) {
mu <- link(m7.8, data = data.frame(shade.c=-1:1, water.c=var))
for_invoke <- function(func) {
mu %>% as.tibble() %>% map_df(func) %>% t() %>% as.tibble()
}
mu <- invoke_map_dfc(for_invoke, list(list(mean), list(PI)))
mu <- mu %>% rename(blooms=V1, Lower=V11, Upper=V2) %>% add_column(shade.c=-1:1, water.c=var)
return(mu)
}
data_7.9 <- purrr::map_dfr(as.list(-1:1), for_tryptych)
ggplot(data = tulips,
aes(x = shade.c,
y = blooms)) +
geom_point() +
geom_line(data = data_7.9, aes(x = shade.c, y = blooms), inherit.aes = F) +
facet_grid(~water.c) +
geom_ribbon(data = data_7.9, aes(x = shade.c, ymin = Lower, ymax = Upper), fill = "grey80", alpha=1/3, inherit.aes = F) +
facet_grid(cols = vars(water.c))+
ggtitle("Triptych", subtitle = "Predicted blooms across water tratments with interaction effect")
mu <- link(m7.9, data = data.frame(shade.c=-1:1, water.c=var))
for_tryptych <- function(var) {
mu <- link(m7.9, data = data.frame(shade.c=-1:1, water.c=var))
for_invoke <- function(func) {
mu %>% as.tibble() %>% map_df(func) %>% t() %>% as.tibble()
}
mu <- invoke_map_dfc(for_invoke, list(list(mean), list(PI)))
mu <- mu %>% rename(blooms=V1, Lower=V11, Upper=V2) %>% add_column(shade.c=-1:1, water.c=var)
return(mu)
}
data_7.9 <- purrr::map_dfr(as.list(-1:1), for_tryptych)
ggplot(data = tulips,
aes(x = shade.c,
y = blooms)) +
geom_point() +
geom_line(data = data_7.9, aes(x = shade.c, y = blooms), inherit.aes = F) +
facet_grid(~water.c) +
geom_ribbon(data = data_7.9, aes(x = shade.c, ymin = Lower, ymax = Upper), fill = "grey80", alpha=1/3, inherit.aes = F) +
facet_grid(cols = vars(water.c))+
ggtitle("Triptych", subtitle = "Predicted blooms across water tratments with interaction effect")
x <- z <- w <- 1
colnames(model.matrix(~x*z*w))
model.matrix(~x*z*w)
colnames(model.matrix(~x*z*w))
colnames(model.matrix(~x*z*w-1))
colnames(model.matrix(~x*z*w))
source(file = "scripts/basePackages.R")
paquetes <- list("coda", "mvtnorm", "devtools", "rethinking", "tidyverse", "ggrepel", "splines", "rstan")
lapply(paquetes, FUN = library, character.only=T)
source(file = "scripts/basePackages.R")
paquetes <- list("rstan", "coda", "mvtnorm", "devtools", "rethinking", "tidyverse", "ggrepel", "splines")
lapply(paquetes, FUN = library, character.only=T)
install.packages("rstan")
install.packages("rstan")
install.packages(c("bayesplot", "bridgesampling", "brms", "Brobdingnag", "callr", "caTools", "d3r", "data.table", "dbplyr", "devtools", "digest", "dygraphs", "e1071", "evaluate", "flexdashboard", "git2r", "glue", "gtools", "highr", "httpuv", "igraph", "inline", "ipred", "iterators", "kernlab", "later", "lava", "matrixStats", "miniUI", "ModelMetrics", "munsell", "nleqslv", "openssl", "packrat", "pillar", "pkgconfig", "plotly", "plotmo", "plotrix", "pls", "pool", "psych", "Rcpp", "RcppArmadillo", "RCurl", "recommenderlab", "rJava", "rlang", "rmarkdown", "robustbase", "rstantools", "scales", "stringi", "utf8", "xlsx", "xtable", "xts", "yaml", "zoo"))
source(file = "scripts/basePackages.R")
source(file = "scripts/basePackages.R")
.libPaths()
install.packages(c("backports", "BH", "bindr", "bindrcpp", "broom", "caTools", "curl", "digest", "dplyr", "evaluate", "flexdashboard", "forcats", "ggplot2", "glue", "haven", "highr", "hms", "htmlwidgets", "httpuv", "knitr", "lubridate", "miniUI", "modelr", "munsell", "openssl", "pkgconfig", "plogr", "psych", "purrr", "Rcpp", "readxl", "reshape2", "rlang", "rmarkdown", "rprojroot", "scales", "selectr", "shiny", "shinydashboard", "shinyjs", "sourcetools", "stringi", "stringr", "tibble", "tidyr", "tidyselect", "tidyverse", "viridisLite", "xml2", "xtable", "yaml"))
install.packages(c("later", "stringi"))
Sys.getenv('PATH')
system('g++ -v')
system('g++ -v')
system('g++ -v')
system('where make')
system('g++ -version')
Sys.getenv('PATH')
Sys.getenv('PATH')
system('g++ -version')
system('where make')
file.path(Sys.getenv("HOME"), ".Rprofile")
cat('Sys.setenv(BINPREF = "C:/Rtools/mingw_$(WIN)/bin/")',
file = file.path(Sys.getenv("HOME"), ".Rprofile"),
sep = "\n", append = TRUE)
install.packages("rstan", repos = "https://cloud.r-project.org/", dependencies=TRUE)
fx <- inline::cxxfunction( signature(x = "integer", y = "numeric" ) , '
return ScalarReal( INTEGER(x)[0] * REAL(y)[0] ) ;
' )
fx( 2L, 5 )
library(tidyverse)
if("tidyverse" %in% rownames(installed.packages()) == FALSE) {install.packages("tidyverse")}
install.packages("tidyverse")
paquetes <- list("coda", "mvtnorm", "devtools", "rethinking", "tidyverse", "ggrepel", "splines", "rstan")
lapply(paquetes, FUN = library, character.only=T)
install.packages("mvtnorm")
lapply(paquetes, FUN = library, character.only=T)
install.packages("colorspace")
lapply(paquetes, FUN = library, character.only=T)
install.packages("tidyverse", dependencies = T)
lapply(paquetes, FUN = library, character.only=T)
install.packages("ggplot2", dependencies = T)
lapply(paquetes, FUN = library, character.only=T)
install.packages("lazyeval")
lapply(paquetes, FUN = library, character.only=T)
install.packages("plyr")
lapply(paquetes, FUN = library, character.only=T)
install.packages("rstan", dependencies = T)
lapply(paquetes, FUN = library, character.only=T)
install.packages("StanHeaders")
lapply(paquetes, FUN = library, character.only=T)
devtools::install_github("rmcelreath/rethinking")
install.packages("matrixStats")
